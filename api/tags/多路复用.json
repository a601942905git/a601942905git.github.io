{"name":"多路复用","slug":"多路复用","count":1,"postlist":[{"title":"带你看懂redis IO模型","uid":"5ce0c663a19d8e8ee699635ec101be20","slug":"IO模型","date":"2022-12-11T05:49:28.000Z","updated":"2022-12-11T05:53:54.916Z","comments":true,"path":"api/articles/IO模型.json","keywords":null,"cover":[],"text":"1.前言如你所知，高性能web服务器Nginx选择使用IO多路复用技术处理客户端请求，高性能内存数据库Redis同样也选择使用IO多路复用技术处理客户端请求，这足以说明IO多路复用是非常优秀的IO模型，毕竟人以类聚、物以群分。 接下来会从传统阻塞IO模型说起，聊到传统非阻塞IO模...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"redis","slug":"redis","count":1,"path":"api/categories/redis.json"}],"tags":[{"name":"多路复用","slug":"多路复用","count":1,"path":"api/tags/多路复用.json"}],"author":{"name":"黑白搬砖工","slug":"blog-author","avatar":"https://wolf-heart.oss-cn-beijing.aliyuncs.com/lg_22641_1606122876_5fbb7d7c432a1.jpeg","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/a601942905git","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/483440845930343","customs":{}}}}]}