{"title":"系统重启你的应用会怎么样？","uid":"a7366034e22a497a711893a0546ee23b","slug":"系统重启你的应用会怎么样？","date":"2022-12-10T13:58:00.000Z","updated":"2022-12-10T14:01:02.119Z","comments":true,"path":"api/articles/系统重启你的应用会怎么样？.json","keywords":null,"cover":[],"content":"<h2 id=\"1-前言\"><a href=\"#1-前言\" class=\"headerlink\" title=\"1.前言\"></a>1.前言</h2><p>近日就系统重启引发了一些思考，在系统重启过程中，正在进行的请求会如何被处理？正在消费的消息会不会丢失？异步执行的任务会不会被中断？既然存在这些问题，那我们的应用程序是不是就不能重启？但是，我们的应用程序随着版本迭代也在不断重启为什么这些问题没有出现呢？还是应用做了额外处理？带着这些疑问，结合场景模拟，看看实际情况怎么处理。</p>\n<h2 id=\"2-场景\"><a href=\"#2-场景\" class=\"headerlink\" title=\"2. 场景\"></a>2. 场景</h2><h3 id=\"2-1-http请求\"><a href=\"#2-1-http请求\" class=\"headerlink\" title=\"2.1 http请求\"></a>2.1 http请求</h3><h4 id=\"2-1-1-创建请求\"><a href=\"#2-1-1-创建请求\" class=\"headerlink\" title=\"2.1.1 创建请求\"></a>2.1.1 创建请求</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ShutDownController</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"shut/down\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">shutDown</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-1-2-调用请求\"><a href=\"#2-1-2-调用请求\" class=\"headerlink\" title=\"2.1.2 调用请求\"></a>2.1.2 调用请求</h4><p><a href=\"http://localhost:8080/shut/down\">http://localhost:8080/shut/down</a></p>\n<h4 id=\"2-1-3-模拟重启\"><a href=\"#2-1-3-模拟重启\" class=\"headerlink\" title=\"2.1.3 模拟重启\"></a>2.1.3 模拟重启</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">kill</span> <span class=\"token parameter variable\">-2</span> 应用pid<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-1-4-现象\"><a href=\"#2-1-4-现象\" class=\"headerlink\" title=\"2.1.4 现象\"></a>2.1.4 现象</h4><p><img src=\"https://wolf-heart.oss-cn-beijing.aliyuncs.com/blog/springboot/1639037523700.jpg\"></p>\n<h4 id=\"2-1-5-结论\"><a href=\"#2-1-5-结论\" class=\"headerlink\" title=\"2.1.5 结论\"></a>2.1.5 结论</h4><p>请求执行过程中，关闭应用程序出现无法访问提示</p>\n<h4 id=\"2-1-6-开启优雅关机\"><a href=\"#2-1-6-开启优雅关机\" class=\"headerlink\" title=\"2.1.6 开启优雅关机\"></a>2.1.6 开启优雅关机</h4><p>如上出现的现象对用户来说很不友好，会造成用户一脸懵逼，那么有没有什么措施可以避免这种现象的出现呢？是否可以在应用关闭前执行完已经接受的请求，拒绝新的请求呢？答案可以的，只需要在配置文件中新增<code>优雅关机</code>配置</p>\n<pre class=\"line-numbers language-yaml\" data-language=\"yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">server</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">shutdown</span><span class=\"token punctuation\">:</span> graceful <span class=\"token comment\"># 设置优雅关闭，该功能在Spring Boot2.3版本中才有。注意：需要使用Kill -2 触发来关闭应用，该命令会触发shutdownHook</span>\n\n<span class=\"token key atrule\">spring</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">lifecycle</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">timeout-per-shutdown-phase</span><span class=\"token punctuation\">:</span> 30s <span class=\"token comment\"># 设置缓冲时间，注意需要带上时间单位(该时间用于等待任务执行完成)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>添加完配置后，再次执行<code>2.1.2</code>和<code>2.1.3</code>流程，就会看到如下效果</p>\n<p><img src=\"https://wolf-heart.oss-cn-beijing.aliyuncs.com/blog/springboot/1639038195344.jpg\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>可以看到，即便在请求执行过程中关闭应用，已接收的请求依然会执行下去</p></blockquote>\n<h3 id=\"2-2-消息消费\"><a href=\"#2-2-消息消费\" class=\"headerlink\" title=\"2.2 消息消费\"></a>2.2 消息消费</h3><p>在<code>前言</code>提到过，消息消费过程中，关闭应用，消息是会丢失还是会被重新放入消息队列中呢？</p>\n<h4 id=\"2-2-1-创建生产者\"><a href=\"#2-2-1-创建生产者\" class=\"headerlink\" title=\"2.2.1 创建生产者\"></a>2.2.1 创建生产者</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@RestController</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">RabbitMqController</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Autowired</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">RabbitTemplate</span> rabbitTemplate<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/sendBusinessMessage\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sendBusinessMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n        rabbitTemplate<span class=\"token punctuation\">.</span><span class=\"token function\">convertAndSend</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RabbitmqConfig</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BUSINESS_EXCHANGE</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">RabbitmqConfig</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BUSINESS_ROUTING_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"send message\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-2-2-创建消费者\"><a href=\"#2-2-2-创建消费者\" class=\"headerlink\" title=\"2.2.2 创建消费者\"></a>2.2.2 创建消费者</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@RabbitListener</span><span class=\"token punctuation\">(</span>queues <span class=\"token operator\">=</span> <span class=\"token class-name\">RabbitmqConfig</span><span class=\"token punctuation\">.</span><span class=\"token constant\">BUSINESS_QUEUE_NAME</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Slf4j</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BusinessConsumer</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">/**\n     * 操作场景：\n     * 1.通过RabbitmqApplication启动类启动应用程序\n     * 2.调用/sendBusinessMessage接口发送消息\n     * 3.RabbitMQ broker将消息发送给消费者\n     * 4.消费者收到消息后进行消费\n     * 5.消费者消费消息过程中，应用程序关闭，断开channel，断开connection，未ack的消息会被重新放入broker中\n     *\n     * @param content 消息内容\n     * @param channel channel通道\n     * @param message message对象\n     */</span>\n    <span class=\"token annotation punctuation\">@RabbitHandler</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">helloConsumer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> content<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Channel</span> channel<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Message</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"business consumer receive message：&#123;&#125;\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 模拟业务执行耗时</span>\n            <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-2-3-调用请求\"><a href=\"#2-2-3-调用请求\" class=\"headerlink\" title=\"2.2.3 调用请求\"></a>2.2.3 调用请求</h4><p><a href=\"http://localhost:8080/sendBusinessMessage\">http://localhost:8080/sendBusinessMessage</a></p>\n<h4 id=\"2-2-4-未关闭应用前\"><a href=\"#2-2-4-未关闭应用前\" class=\"headerlink\" title=\"2.2.4 未关闭应用前\"></a>2.2.4 未关闭应用前</h4><p><img src=\"https://wolf-heart.oss-cn-beijing.aliyuncs.com/blog/springboot/1639038943697.jpg\"></p>\n<h4 id=\"2-2-5-关闭应用后\"><a href=\"#2-2-5-关闭应用后\" class=\"headerlink\" title=\"2.2.5 关闭应用后\"></a>2.2.5 关闭应用后</h4><p><img src=\"https://wolf-heart.oss-cn-beijing.aliyuncs.com/blog/springboot/1639038950245.jpg\"></p>\n<h4 id=\"2-2-6-结论\"><a href=\"#2-2-6-结论\" class=\"headerlink\" title=\"2.2.6 结论\"></a>2.2.6 结论</h4><p>消息消费过程中，关闭应用，未ack的消息会被重新放入消息队列中，以此来保证消息一定会被消费</p>\n<h3 id=\"2-3-异步任务\"><a href=\"#2-3-异步任务\" class=\"headerlink\" title=\"2.3 异步任务\"></a>2.3 异步任务</h3><h4 id=\"2-3-1-线程池配置\"><a href=\"#2-3-1-线程池配置\" class=\"headerlink\" title=\"2.3.1 线程池配置\"></a>2.3.1 线程池配置</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ThreadPoolConfig</span> <span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ThreadPoolTaskExecutor</span> <span class=\"token function\">threadPoolTaskExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">ThreadPoolTaskExecutor</span> threadPoolTaskExecutor <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThreadPoolTaskExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        threadPoolTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setThreadNamePrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        threadPoolTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setCorePoolSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        threadPoolTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setMaxPoolSize</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        threadPoolTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setQueueCapacity</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> threadPoolTaskExecutor<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-2-异步任务请求\"><a href=\"#2-3-2-异步任务请求\" class=\"headerlink\" title=\"2.3.2 异步任务请求\"></a>2.3.2 异步任务请求</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Autowired</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">ThreadPoolTaskExecutor</span> threadPoolTaskExecutor<span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@RequestMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"async/task\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">asyncTask</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">InterruptedException</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    threadPoolTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">TimeUnit</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SECONDS</span><span class=\"token punctuation\">.</span><span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">InterruptedException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"task execute complete...\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-3-调用请求\"><a href=\"#2-3-3-调用请求\" class=\"headerlink\" title=\"2.3.3 调用请求\"></a>2.3.3 调用请求</h4><p><a href=\"http://localhost:8080/async/task\">http://localhost:8080/async/task</a></p>\n<h4 id=\"2-3-4-模拟重启\"><a href=\"#2-3-4-模拟重启\" class=\"headerlink\" title=\"2.3.4 模拟重启\"></a>2.3.4 模拟重启</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">kill</span> <span class=\"token parameter variable\">-2</span> 应用pid<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h4 id=\"2-3-5-现象\"><a href=\"#2-3-5-现象\" class=\"headerlink\" title=\"2.3.5 现象\"></a>2.3.5 现象</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Exception <span class=\"token keyword\">in</span> thread <span class=\"token string\">\"test-2\"</span> Exception <span class=\"token keyword\">in</span> thread <span class=\"token string\">\"test-1\"</span> Exception <span class=\"token keyword\">in</span> thread <span class=\"token string\">\"test-3\"</span> java.lang.RuntimeException\n\tat com.boot.example.ShutDownController.lambda<span class=\"token variable\">$asyncTask</span><span class=\"token variable\">$0</span><span class=\"token punctuation\">(</span>ShutDownController.java:37<span class=\"token punctuation\">)</span>\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:1149<span class=\"token punctuation\">)</span>\n\tat java.util.concurrent.ThreadPoolExecutor<span class=\"token variable\">$Worker</span>.run<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:624<span class=\"token punctuation\">)</span>\n\tat java.lang.Thread.run<span class=\"token punctuation\">(</span>Thread.java:748<span class=\"token punctuation\">)</span>\njava.lang.RuntimeException\n\tat com.boot.example.ShutDownController.lambda<span class=\"token variable\">$asyncTask</span><span class=\"token variable\">$0</span><span class=\"token punctuation\">(</span>ShutDownController.java:37<span class=\"token punctuation\">)</span>\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:1149<span class=\"token punctuation\">)</span>\n\tat java.util.concurrent.ThreadPoolExecutor<span class=\"token variable\">$Worker</span>.run<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:624<span class=\"token punctuation\">)</span>\n\tat java.lang.Thread.run<span class=\"token punctuation\">(</span>Thread.java:748<span class=\"token punctuation\">)</span>\njava.lang.RuntimeException\n\tat com.boot.example.ShutDownController.lambda<span class=\"token variable\">$asyncTask</span><span class=\"token variable\">$0</span><span class=\"token punctuation\">(</span>ShutDownController.java:37<span class=\"token punctuation\">)</span>\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:1149<span class=\"token punctuation\">)</span>\n\tat java.util.concurrent.ThreadPoolExecutor<span class=\"token variable\">$Worker</span>.run<span class=\"token punctuation\">(</span>ThreadPoolExecutor.java:624<span class=\"token punctuation\">)</span>\n\tat java.lang.Thread.run<span class=\"token punctuation\">(</span>Thread.java:748<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-6-修改线程池配置\"><a href=\"#2-3-6-修改线程池配置\" class=\"headerlink\" title=\"2.3.6 修改线程池配置\"></a>2.3.6 修改线程池配置</h4><p>在线程池配置中添加如下配置：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">threadPoolTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setWaitForTasksToCompleteOnShutdown</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nthreadPoolTaskExecutor<span class=\"token punctuation\">.</span><span class=\"token function\">setAwaitTerminationSeconds</span><span class=\"token punctuation\">(</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-7-修改配置后现象\"><a href=\"#2-3-7-修改配置后现象\" class=\"headerlink\" title=\"2.3.7 修改配置后现象\"></a>2.3.7 修改配置后现象</h4><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">40.054</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">40.055</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">40.055</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">50.059</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">50.059</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">09</span><span class=\"token operator\">:</span><span class=\"token number\">50.060</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token operator\">:</span><span class=\"token number\">00.062</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token operator\">:</span><span class=\"token number\">00.062</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token operator\">:</span><span class=\"token number\">00.065</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token operator\">-</span><span class=\"token number\">09</span> <span class=\"token number\">17</span><span class=\"token operator\">:</span><span class=\"token number\">10</span><span class=\"token operator\">:</span><span class=\"token number\">10.066</span>  <span class=\"token constant\">INFO</span> <span class=\"token number\">22383</span> <span class=\"token operator\">--</span><span class=\"token operator\">-</span> <span class=\"token punctuation\">[</span>         test<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>boot<span class=\"token punctuation\">.</span>example<span class=\"token punctuation\">.</span></span>ShutDownController</span>      <span class=\"token operator\">:</span> task execute complete<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"2-3-8-结论\"><a href=\"#2-3-8-结论\" class=\"headerlink\" title=\"2.3.8 结论\"></a>2.3.8 结论</h4><p>使用线程池执行异步任务，在没有添加配置的情况下，任务无法执行完成，在添加配置的情况下，任务依然可以执行完成。</p>\n<h3 id=\"3-总结\"><a href=\"#3-总结\" class=\"headerlink\" title=\"3. 总结\"></a>3. 总结</h3><p>为了保证在应用程序重启过程中任务仍然可以执行完成，需要开启<code>优雅关机</code>配置并对线程池添加<code>等待任务执行完成</code>以及<code>等待时间</code>配置</p>\n","feature":true,"text":"1.前言近日就系统重启引发了一些思考，在系统重启过程中，正在进行的请求会如何被处理？正在消费的消息会不会丢失？异步执行的任务会不会被中断？既然存在这些问题，那我们的应用程序是不是就不能重启？但是，我们的应用程序随着版本迭代也在不断重启为什么这些问题没有出现呢？还是应用做了额外处理...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"微服务","slug":"微服务","count":3,"path":"api/categories/微服务.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">1.前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">2. 场景</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-http%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">2.1 http请求</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-1-%E5%88%9B%E5%BB%BA%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">2.1.1 创建请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-2-%E8%B0%83%E7%94%A8%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">2.1.2 调用请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-3-%E6%A8%A1%E6%8B%9F%E9%87%8D%E5%90%AF\"><span class=\"toc-text\">2.1.3 模拟重启</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-4-%E7%8E%B0%E8%B1%A1\"><span class=\"toc-text\">2.1.4 现象</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-5-%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">2.1.5 结论</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-1-6-%E5%BC%80%E5%90%AF%E4%BC%98%E9%9B%85%E5%85%B3%E6%9C%BA\"><span class=\"toc-text\">2.1.6 开启优雅关机</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-2-%E6%B6%88%E6%81%AF%E6%B6%88%E8%B4%B9\"><span class=\"toc-text\">2.2 消息消费</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-1-%E5%88%9B%E5%BB%BA%E7%94%9F%E4%BA%A7%E8%80%85\"><span class=\"toc-text\">2.2.1 创建生产者</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-2-%E5%88%9B%E5%BB%BA%E6%B6%88%E8%B4%B9%E8%80%85\"><span class=\"toc-text\">2.2.2 创建消费者</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-3-%E8%B0%83%E7%94%A8%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">2.2.3 调用请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-4-%E6%9C%AA%E5%85%B3%E9%97%AD%E5%BA%94%E7%94%A8%E5%89%8D\"><span class=\"toc-text\">2.2.4 未关闭应用前</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-5-%E5%85%B3%E9%97%AD%E5%BA%94%E7%94%A8%E5%90%8E\"><span class=\"toc-text\">2.2.5 关闭应用后</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-2-6-%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">2.2.6 结论</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-3-%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1\"><span class=\"toc-text\">2.3 异步任务</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-1-%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.3.1 线程池配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-2-%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">2.3.2 异步任务请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-3-%E8%B0%83%E7%94%A8%E8%AF%B7%E6%B1%82\"><span class=\"toc-text\">2.3.3 调用请求</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-4-%E6%A8%A1%E6%8B%9F%E9%87%8D%E5%90%AF\"><span class=\"toc-text\">2.3.4 模拟重启</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-5-%E7%8E%B0%E8%B1%A1\"><span class=\"toc-text\">2.3.5 现象</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-6-%E4%BF%AE%E6%94%B9%E7%BA%BF%E7%A8%8B%E6%B1%A0%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.3.6 修改线程池配置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-7-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E5%90%8E%E7%8E%B0%E8%B1%A1\"><span class=\"toc-text\">2.3.7 修改配置后现象</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-3-8-%E7%BB%93%E8%AE%BA\"><span class=\"toc-text\">2.3.8 结论</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">3. 总结</span></a></li></ol></li></ol>","author":{"name":"黑白搬砖工","slug":"blog-author","avatar":"https://wolf-heart.oss-cn-beijing.aliyuncs.com/lg_22641_1606122876_5fbb7d7c432a1.jpeg","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/a601942905git","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/483440845930343","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"三种你需要考虑的一致性问题的场景","uid":"24fad9e0b20684c1cf6b335f2dccd634","slug":"三种你需要考虑一致性问题的场景","date":"2022-12-10T13:57:00.000Z","updated":"2022-12-10T13:59:15.045Z","comments":true,"path":"api/articles/三种你需要考虑一致性问题的场景.json","keywords":null,"cover":[],"text":"1.前言分布式系统开发过程中往往会涉及到很多需要保证数据一致性问题的场景，比如接收mq消息、接收http请求、内部业务处理。如果你还不了解这些场景或者不知道如何处理，请继续往下阅读。 2.接收mq消息 接收mq消息场景在分布式系统开发过程中想必是一种比较常见的场景，具体过程就是，...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"微服务","slug":"微服务","count":3,"path":"api/categories/微服务.json"}],"tags":[{"name":"一致性","slug":"一致性","count":1,"path":"api/tags/一致性.json"}],"author":{"name":"黑白搬砖工","slug":"blog-author","avatar":"https://wolf-heart.oss-cn-beijing.aliyuncs.com/lg_22641_1606122876_5fbb7d7c432a1.jpeg","link":"/","description":"一位正在重塑知识的技术人","socials":{"github":"https://github.com/a601942905git","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"https://juejin.cn/user/483440845930343","customs":{}}},"feature":true}}